@model IEnumerable<Test>

@{
    ViewData["ActivePage"] = "ReportedTests";
    ViewData["Title"] = "Reported tests";
}

<h2>Reported tests</h2>
<form asp-controller="Admin" asp-action="ReportedTests" method="get">
    <div class="form-group">
        <label for="SearchString">Test name:</label>
        <div class="row">
            <div class="col-xs-12 col-md-7">
                @if (Context.Request.Query["SearchString"].Count != 0)
                {
                    <input type="text" class="form-control" name="SearchString" id="SearchString" value="@Context.Request.Query["SearchString"][0]">
                }
                else
                {
                    <input type="text" class="form-control" name="SearchString" id="SearchString">
                }

            </div>
            <div class="col-xs-12 col-md-offset-2 col-md-3">
                <input type="submit" class="form-control " id="submit" value="Search">
            </div>
        </div>
    </div>
</form>
<table class="table" id="reportedTestTable">
    @Html.AntiForgeryToken()
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Id)
            </th>
            <th>
                Name
            </th>
            <th>
                @Html.DisplayNameFor(model => model.AppUser)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TestReports)
            </th>
            <th>
                Test rating
            </th>
            <th>
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Id)
                </td>
                <td>
                    <a asp-action="Index" asp-controller="TestQuestions" asp-route-id="@item.Id">@Html.DisplayFor(modelItem => item.TestName)</a>
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.AppUser.UserName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TestReports.Count)
                </td>
                <td>
                    @{var rating = item.TestMarks.Count(tm => tm.EnjoyedTest) - item.TestMarks.Count(tm => !tm.EnjoyedTest); }
                    @if (rating > 0)
                    {
                        <span class="text-success">@rating</span>
                    }
                    else if (rating < 0)
                    {
                        <span class="text-danger">@rating</span>
                    }
                    else
                    {
                        <span>@rating</span>
                    }
                </td>
                <td>
                    <a asp-action="DeleteReports" asp-route-id="@item.Id">Ingore reports</a><span> |</span>
                    <a asp-action="Delete" asp-route-id="@item.Id" asp-controller="Tests">Delete test</a><span> |</span>
                    @if (!(item.TestCode is null))
                    {
                        <a asp-action="Index" asp-controller="TestEngine" asp-route-code="@item.TestCode">Try test out</a><span> |</span>
                    }
                    <a asp-action="Details" asp-route-id="@item.Id" asp-controller="Tests">Details</a><span> |</span>
                    <a asp-action="Index" asp-route-id="@item.Id" asp-controller="TestReports">Reports</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="row">
    <div class="col-md-offset-3 col-md-6 text-center">
        <button type="button" class="btn btn-primary" onclick="getReportedTests()">Load more tests</button>
    </div>
</div>


