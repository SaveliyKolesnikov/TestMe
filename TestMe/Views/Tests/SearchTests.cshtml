@model IEnumerable<Test>

@{
    ViewData["Title"] = "Search tests";
}

<h2>Search tests</h2>
<form asp-action="SearchTests" method="get">
    <div class="form-group">
        <label for="SearchString">Test name:</label>
        <div class="row">
            <div class="col-xs-12 col-md-7">
                @if (Context.Request.Query["searchString"].Count != 0)
                {
                    <input type="text" class="form-control" name="searchString" id="searchString" value="@Context.Request.Query["searchString"][0]">
                }
                else
                {
                    <input type="text" class="form-control" name="searchString" id="searchString">
                }

            </div>
            <div class="col-xs-1 col-md-offset-1 col-md-1 dropdown">
                <button class="btn dropdown-toggle" type="button" id="dropDownMenuButton" data-toggle="dropdown">
                    <span class="glyphicon glyphicon-filter"></span>
                </button>
                <div class="dropdown-menu" id="filterDropdown" aria-labelledby="dropdownMenuButton">
                    <div class="row">
                        <div class="col-xs-12 form-group">
                            <div class="row">
                                <div class="col-xs-12">
                                    <label for="testRating">Test rating</label>
                                </div>
                                <div class="col-xs-12" id="testRating">
                                    <label for="testRatingFrom">from</label>
                                    @if (Context.Request.Query["testRatingFrom"].Count != 0 && @Context.Request.Query["testRatingFrom"][0] != "")
                                    {
                                        <input type="number" class="form-control" name="testRatingFrom" id="testRatingFrom" value='@Context.Request.Query["testRatingFrom"][0]' />
                                    }
                                    else
                                    {
                                        <input type="number" class="form-control" name="testRatingFrom" id="testRatingFrom" placeholder='0' />
                                    }
                                    <label for="testRatingTo">to</label>
                                    @if (Context.Request.Query["testRatingTo"].Count != 0 && @Context.Request.Query["testRatingTo"][0] != "")
                                    {
                                        <input type="number" class="form-control" name="testRatingTo" id="testRatingTo" value='@Context.Request.Query["testRatingTo"][0]' />
                                    }
                                    else
                                    {
                                        <input type="number" class="form-control" name="testRatingTo" id="testRatingTo" placeholder='10' />
                                    }
                                </div>
                                <div class="col-xs-12">
                                    <label for="testRating">Test duration</label>
                                </div>
                                <div class="col-xs-12" id="testRating">
                                    <label for="testDurationFrom">from</label>
                                    @if (Context.Request.Query["testDurationFrom"].Count != 0 && @Context.Request.Query["testDurationFrom"][0] != "")
                                    {
                                        <input type="time" class="form-control" name="testDurationFrom" id="testDurationFrom" placeholder='1' value='@Context.Request.Query["testDurationFrom"][0]' />
                                    }
                                    else
                                    {
                                        <input type="time" class="form-control" name="testDurationFrom" id="testDurationFrom" placeholder='1' />
                                    }
                                    <label for="testDurationTo">to</label>
                                    @if (Context.Request.Query["testDurationTo"].Count != 0 && @Context.Request.Query["testDurationTo"][0] != "")
                                    {
                                        <input type="time" class="form-control" name="testDurationTo" id="testDurationTo" placeholder='10' value='@Context.Request.Query["testDurationTo"][0]' />
                                    }
                                    else
                                    {
                                        <input type="time" class="form-control" name="testDurationTo" id="testDurationTo" placeholder='10' />
                                    }
                                </div>
                                <div class="col-xs-12">
                                    <button class="btn btn-info center-block" id="resetFilterButton" type="button">Reset</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-xs-11 col-md-3">
                <input type="submit" class="form-control btn-primary" id="submit" value="Search">
            </div>

        </div>

    </div>
</form>
<table class="table" id="testTable">
    @Html.AntiForgeryToken()
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.TestName)
            </th>
            <th class="hidden-xs">
                @Html.DisplayNameFor(model => model.CreationDate)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.TestDuration)
            </th>
            <th>
                Rating
            </th>
            <th>
                Actions
            </th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    <a asp-action="Index" asp-controller="TestEngine" asp-route-code="@item.TestCode">
                        @Html.DisplayFor(modelItem => item.TestName)
                    </a>
                </td>
                <td class="hidden-xs">
                    @Html.DisplayFor(modelItem => item.CreationDate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.TestDuration)
                </td>
                <td>
                    @{var rating = item.TestMarks.Count(tm => tm.EnjoyedTest) - item.TestMarks.Count(tm => !tm.EnjoyedTest); }
                    @if (rating > 0)
                    {
                        <span class="text-success">@rating</span>
                    }
                    else if (rating < 0)
                    {
                        <span class="text-danger">@rating</span>
                    }
                    else
                    {
                        <span>@rating</span>
                    }
                </td>
                <td>
                    <a asp-action="Details" asp-route-id="@item.Id">Details</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="row">
    <div class="col-md-offset-3 col-md-6 text-center">
         <button type="button" class="btn btn-primary" onclick="getTopTests()">Load more tests</button>
    </div>
</div>
@section Scripts{
    <script type="text/javascript" src="~/js/searchTestsScript.js"></script>
}
